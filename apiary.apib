FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# RRVS

RestauRant Vote System is a simple REST API allowing users view menus of each restaurant and vote for them.
Admins could update restaurants, menus and dishes.

## Restaurants collection [/restaurants]

### List all restaurants [GET]

Получить все рестораны

+ Response 200 (application/json;charset=UTF-8)

        [ {
              "id" : 1,
              "name" : "CIN CIN",
              "phone" : "+7(495)2236547",
              "address" : "г. Москва, ул. Мирская, д. 12"
        }, {
              "id" : 2,
              "name" : "Старый город",
              "phone" : "+7(495)1245298",
              "address" : "г. Москва, Старый Петровско-Разумовский проезд, д. 21/3"
        }, {
              "id" : 3,
              "name" : "Obed.ru",
              "phone" : "+7(495)7778878",
              "address" : "г. Москва, уд. Строителей, д. 34"
        }, {
              "id" : 4,
              "name" : "Клевер",
              "phone" : "+7(4922)389104",
              "address" : "г. Владимир, ул. Красная, д. 15"
        }, {
              "id" : 5,
              "name" : "Golden cock",
              "phone" : "+8(0456)25567890",
              "address" : "Riga, Skarnu iela, 22"
        } ]


### List restaurant by id [GET /restaurants/id]

Получить ресторан

+ Response 200 (application/json;charset=UTF-8)

        {
              "id" : 1,
              "name" : "CIN CIN",
              "phone" : "+7(495)2236547",
              "address" : "г. Москва, ул. Мирская, д. 12"
        }


### List menus by restaurant id [GET /restaurants/id/menus]

Получить все меню ресторана

+ Response 200 (application/json;charset=UTF-8)

        [ {
            "id" : 1,
            "date" : "2019-01-26"
        } ]
    

### List dishes by restaurant id and menu id [GET /restaurants/id/menus/id]

Получить все блюда из меню ресторана

+ Response 200 (application/json;charset=UTF-8)

        [ {
              "id" : 1,
              "name" : "Картофель жареный",
              "price" : 35
        }, {
              "id" : 8,
              "name" : "Чай",
              "price" : 30
        }, {
              "id" : 15,
              "name" : "Пельмени",
              "price" : 90
        }, {
              "id" : 20,
              "name" : "Суп грибной",
              "price" : 60
        }, {
              "id" : 21,
              "name" : "Салат овощной",
              "price" : 45
        } ]


### List dishes by restaurant id and menu date [GET /restaurants/id/menus/filter?date=yyyy-MM-dd]

Получить все блюда из меню ресторана по дате меню

+ Response 200 (application/json;charset=UTF-8)

        [ {
          "id" : 1,
          "date" : "2019-01-26",
          "dishes" : [ {
            "id" : 1,
            "name" : "Картофель жареный",
            "price" : 35
          }, {
            "id" : 8,
            "name" : "Чай",
            "price" : 30
          }, {
            "id" : 15,
            "name" : "Пельмени",
            "price" : 90
          }, {
            "id" : 20,
            "name" : "Суп грибной",
            "price" : 60
          }, {
            "id" : 21,
            "name" : "Салат овощной",
            "price" : 45
          } ]
        } ]

        
### Create restaurant [POST]

Создать новый ресторан

+ Request (application/json;charset=UTF-8)
        
        {
            "name" : "Sezam",
            "phone" : "12121212",
            "address" : "Prague, Karlov Most, 1"
        }


+ Response 201 (application/json;charset=UTF-8)

        {
            "id" : 6,
            "name" : "Sezam",
            "phone" : "12121212",
            "address" : "Prague, Karlov Most, 1"
        }


### Update restaurant by id [PUT /restaurants/id]

Обновить информацию о ресторане

+ Request (application/json;charset=UTF-8)
        
        {
            "name" : "Sezam2",
            "phone" : "777888999",
            "address" : "Prague, Karlov Most, 1"
        }


+ Response 204


### Delete restaurant by id [DELETE /restaurants/id]

Удалить информацию о ресторане

+ Response 204


## Users collection [/users]

### List all users [GET]

Получить всеx пользователей

+ Response 200 (application/json;charset=UTF-8)

        [ {
            "id" : 1,
            "name" : "tony",
            "login" : "user",
            "roles" : [ "ROLE_USER" ]
          }, {
            "id" : 2,
            "name" : "regorov",
            "login" : "admin",
            "roles" : [ "ROLE_ADMIN", "ROLE_USER" ]
          }, {
            "id" : 3,
            "name" : "nagorniy",
            "login" : "nag22",
            "roles" : [ "ROLE_USER" ]
          }, {
            "id" : 4,
            "name" : "autotest",
            "login" : "userautotest",
            "roles" : [ "ROLE_USER" ]
        } ]
        

### List user by id [GET /users/id]

Получить пользователя

+ Response 200 (application/json;charset=UTF-8)

        {
          "id" : 1,
          "name" : "tony",
          "login" : "user",
          "roles" : [ "ROLE_USER" ]
        }
        

### Create user [POST]

Создать нового пользователя

+ Request (application/json;charset=UTF-8)
        
        {
          "name" : "newuser",
          "login" : "newlogin",
          "password" : "secretkey"
        }



+ Response 201 (application/json;charset=UTF-8)

        {
          "id" : 9,
          "name" : "newuser",
          "login" : "newlogin",
          "roles" : [ "ROLE_USER" ]
        }



### Update user by id [PUT /users/id]

Обновить информацию о пользователе

+ Request (application/json;charset=UTF-8)
        
        {
            "name" : "updateduser",
            "login" : "updatedlogin",
            "password" : "newsecret"
        }


+ Response 204


### Delete user by id [DELETE /users/id]

Удалить информацию о пользователе

+ Response 204


## Votes collection [/votes]

### List all votes [GET]

Получить все голоса

+ Response 200 (application/json;charset=UTF-8)

        [ {
          "id" : 1,
          "date" : "2019-01-26",
          "restaurant_id" : 1
        }, {
          "id" : 2,
          "date" : "2019-01-27",
          "restaurant_id" : 3
        } ]
        

### List vote by id [GET /votes/id]

Получить голос

+ Response 200 (application/json;charset=UTF-8)

        {
          "id" : 1,
          "date" : "2019-01-26",
          "restaurant_id" : 1
        }
        

### Create/update vote [POST]

Проголосовать (голосовать можно до 11:00,
голоса до изменяют предыдущий выбор, голоса после не принимаются)

+ Request (application/json;charset=UTF-8)
        
        {
          "restaurant_id" : 3
        }

+ Response 204 (application/json;charset=UTF-8)

+ Response 409 (application/json;charset=UTF-8)

        {
          "type" : "END_VOTE_ERROR",
          "details" : "Can not vote or change your choice after 11:00",
        }


### Delete vote by id [DELETE /votes/id]

Удалить голос

+ Response 204


## Dishes collection [/dishes]

### List all dishes [GET]

Получить все блюда

+ Response 200 (application/json;charset=UTF-8)

        [ {
          "id" : 1,
          "name" : "Картофель жареный",
          "price" : 35
        }, {
          "id" : 2,
          "name" : "Рис",
          "price" : 30
        }, {
          "id" : 3,
          "name" : "Гречка",
          "price" : 30
        }, {
          "id" : 4,
          "name" : "Макароны",
          "price" : 25
        } ]
        

### List dish by id [GET /dishes/id]

Получить блюдо

+ Response 200 (application/json;charset=UTF-8)

        {
          "id" : 1,
          "name" : "Картофель жареный",
          "price" : 35
        }
        

### Create dish [POST]

Создать новое блюдо

+ Request (application/json;charset=UTF-8)
        
        {
          "name" : "newMeal",
          "price" : 77
        }

+ Response 201 (application/json;charset=UTF-8)

        {
          "id" : 26,
          "name" : "newMeal",
          "price" : 77
        }


### Update dish by id [PUT /dishes/id]

Обновить информацию о блюде

+ Request (application/json;charset=UTF-8)
        
        {
            "name" : "updatedMeal",
            "price" : 78
        }

+ Response 204


### Delete dish by id [DELETE /dishes/id]

Удалить блюдо

+ Response 204



## Menus collection [/menus]

### List all menus [GET]

Получить все меню

+ Response 200 (application/json;charset=UTF-8)

        [ {
          "id" : 1,
          "date" : "2019-01-26",
          "restaurant_id" : 1
        }, {
          "id" : 2,
          "date" : "2019-01-26",
          "restaurant_id" : 2
        }, {
          "id" : 3,
          "date" : "2019-01-26",
          "restaurant_id" : 3
        } ]
        

### List menu by id [GET /menus/id]

Получить информацию о меню

+ Response 200 (application/json;charset=UTF-8)

        {
          "id" : 1,
          "date" : "2019-01-26",
          "dishes" : [ {
            "id" : 20,
            "name" : "Суп грибной",
            "price" : 60
          }, {
            "id" : 8,
            "name" : "Чай",
            "price" : 30
          }, {
            "id" : 15,
            "name" : "Пельмени",
            "price" : 90
          }, {
            "id" : 21,
            "name" : "Салат овощной",
            "price" : 45
          }, {
            "id" : 1,
            "name" : "Картофель жареный",
            "price" : 35
          } ]
        }
        

### Create menu [POST]

Создать новое меню

+ Request (application/json;charset=UTF-8)
        
        {
          "date" : "2019-02-26",
          "restaurant_id" : 2
        }

+ Response 201 (application/json;charset=UTF-8)

        {
          "id" : 6,
          "date" : "2019-02-26",
          "restaurant_id" : 2
        }


### Add dish at menu [POST /menus/id/dishes/id]

Добавить блюдо в меню

+ Response 204


### Delete dish from menu [DELETE /menus/id/dishes/id]

Удалить блюдо из меню

+ Response 204

### Delete menu by id [DELETE /menus/id]

Удалить меню

+ Response 204